[gd_scene load_steps=8 format=2]

[ext_resource path="res://addons/openstreetmap/buildings.tscn" type="PackedScene" id=1]
[ext_resource path="res://openstreetmap_demos/third_person/window.png" type="Texture" id=2]
[ext_resource path="res://openstreetmap_demos/third_person/paper_albedo.png" type="Texture" id=3]
[ext_resource path="res://openstreetmap_demos/third_person/tiles.png" type="Texture" id=4]

[sub_resource type="Shader" id=1]

code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;

uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform sampler2D texture_detail_albedo : hint_albedo;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

float rand(vec2 x) {
    return fract(cos(dot(x, vec2(13.9898, 8.141))) * 43758.5453);
}

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	UV2=UV2*uv2_scale.xy+uv2_offset.xy;
}

void fragment() {
	float r = rand(floor(UV));
	vec2 base_uv = 0.5*(UV + vec2(floor(r*2.0), floor(mod(r*4.0, 2.0))));
	vec2 base_uv2 = UV2;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
	vec4 detail = texture(texture_detail_albedo,base_uv2);
	ALBEDO.rgb = mix(detail.rgb,albedo.rgb * albedo_tex.rgb,albedo_tex.a);
}
"

[sub_resource type="ShaderMaterial" id=2]

render_priority = 0
shader = SubResource( 1 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 0.0
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_albedo = ExtResource( 2 )
shader_param/texture_detail_albedo = ExtResource( 3 )
_sections_unfolded = [ "shader_param" ]

[sub_resource type="SpatialMaterial" id=3]

render_priority = 0
flags_transparent = false
flags_unshaded = false
flags_vertex_lighting = false
flags_no_depth_test = false
flags_use_point_size = false
flags_world_triplanar = false
flags_fixed_size = false
flags_albedo_tex_force_srgb = false
vertex_color_use_as_albedo = false
vertex_color_is_srgb = false
params_diffuse_mode = 0
params_specular_mode = 0
params_blend_mode = 0
params_cull_mode = 0
params_depth_draw_mode = 0
params_line_width = 1.0
params_point_size = 1.0
params_billboard_mode = 0
params_grow = false
params_use_alpha_scissor = false
albedo_color = Color( 1, 1, 1, 1 )
albedo_texture = ExtResource( 4 )
metallic = 0.0
metallic_specular = 0.5
metallic_texture_channel = 0
roughness = 0.0
roughness_texture_channel = 0
emission_enabled = false
normal_enabled = false
rim_enabled = false
clearcoat_enabled = false
anisotropy_enabled = false
ao_enabled = false
depth_enabled = false
subsurf_scatter_enabled = false
transmission_enabled = false
refraction_enabled = false
detail_enabled = false
uv1_scale = Vector3( 0.5, 0.5, 0.5 )
uv1_offset = Vector3( 0, 0, 0 )
uv1_triplanar = false
uv1_triplanar_sharpness = 1.0
uv2_scale = Vector3( 1, 1, 1 )
uv2_offset = Vector3( 0, 0, 0 )
uv2_triplanar = false
uv2_triplanar_sharpness = 1.0
proximity_fade_enable = false
distance_fade_enable = false
_sections_unfolded = [ "Albedo", "UV1" ]

[node name="Buildings" index="0" instance=ExtResource( 1 )]

building_level_height = 2.6
building_wall_material = SubResource( 2 )
house_level_height = 2.6
house_roof_angle = 35.0
house_wall_material = SubResource( 2 )
house_roof_material = SubResource( 3 )


