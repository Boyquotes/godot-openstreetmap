[gd_scene load_steps=4 format=2]

[ext_resource path="res://addons/openstreetmap/details.gd" type="Script" id=1]

[sub_resource type="Shader" id=1]

code = "shader_type particles;

uniform float rows = 16;
uniform float spacing = 1.0;
uniform float random = 1.0;
uniform float tile_size = 1.0;
uniform sampler2D splatmap;
uniform vec2 start = vec2(0.0, 0.0);
uniform vec4 condition = vec4(0.0, 1.0, 0.0, 0.0);
uniform vec4 condition_mask = vec4(1.0, 1.0, 1.0, 0.0);

vec3 rand3(vec2 x) {
    return fract(cos(vec3(dot(x, vec2(13.9898, 8.141)),
                          dot(x, vec2(3.4562, 17.398)),
                          dot(x, vec2(13.254, 5.867)))) * 43758.5453);
}

void vertex() {
	// obtain our position based on which particle we're rendering
	vec3 pos = vec3(0.0, 0.0, 0.0);
	pos.z = float(INDEX);
	pos.x = mod(pos.z, rows);
	pos.z = (pos.z - pos.x) / rows;
	
	// and now apply our spacing
	pos += vec3(start.x, 0.0, start.y);
	pos *= spacing;
	
	// now center on our particle location but within our spacing
	//pos.x += EMISSION_TRANSFORM[3][0] - mod(EMISSION_TRANSFORM[3][0], spacing);
	//pos.z += EMISSION_TRANSFORM[3][2] - mod(EMISSION_TRANSFORM[3][2], spacing);
	
	// now add some noise based on our _world_ position
	vec3 noise = rand3(pos.xz);
	pos.x += (noise.x-0.5) * spacing * random;
	pos.z += (noise.y-0.5) * spacing * random;
	
	// apply our height
	vec4 biome = texture(splatmap, (pos.xz+vec2(0.5, 0.5))/tile_size);
	pos.y = -10.0*dot(abs(biome-condition), condition_mask);
	
	// rotate our transform
	TRANSFORM[0][0] = cos(noise.z * 6.28);
	TRANSFORM[0][2] = -sin(noise.z * 6.28);
	TRANSFORM[2][0] = sin(noise.z * 6.28);
	TRANSFORM[2][2] = cos(noise.z * 6.28);
	
	// update our transform to place
	TRANSFORM[3][0] = pos.x;
	TRANSFORM[3][1] = pos.y;
	TRANSFORM[3][2] = pos.z;
}"
_sections_unfolded = [ "Resource" ]

[sub_resource type="ShaderMaterial" id=2]

render_priority = 0
shader = SubResource( 1 )
shader_param/rows = 300.0
shader_param/spacing = 3.0
shader_param/random = null
shader_param/tile_size = null
shader_param/start = null
shader_param/condition = null
shader_param/condition_mask = null
_sections_unfolded = [ "shader_param" ]

[node name="Details" type="Particles"]

layers = 1
material_override = null
cast_shadow = 1
extra_cull_margin = 0.0
use_in_baked_light = false
lod_min_distance = 0.0
lod_min_hysteresis = 0.0
lod_max_distance = 0.0
lod_max_hysteresis = 0.0
emitting = true
amount = 100000
lifetime = 600.0
one_shot = false
preprocess = 0.0
speed_scale = 1.0
explosiveness = 1.0
randomness = 0.0
fixed_fps = 0
fract_delta = true
visibility_aabb = AABB( 0, 0, 0, 1, 1, 1 )
local_coords = true
draw_order = 0
process_material = SubResource( 2 )
draw_passes = 1
draw_pass_1 = null
script = ExtResource( 1 )
_sections_unfolded = [ "Draw Passes", "Drawing", "Geometry", "LOD", "Process Material", "Time", "Transform" ]
mesh = null
spacing = 1.0
random = 1.0
distance = 50.0
condition = null
condition_mask = null


